apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    deprecated.daemonset.template.generation: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"name":"cloudwatch-agent","namespace":"amazon-cloudwatch"},"spec":{"selector":{"matchLabels":{"name":"cloudwatch-agent"}},"template":{"metadata":{"labels":{"name":"cloudwatch-agent"}},"spec":{"containers":[{"env":[{"name":"HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"HOST_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"K8S_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"CI_VERSION","value":"k8s/1.3.8"}],"image":"amazon/cloudwatch-agent:1.247348.0b251302","name":"cloudwatch-agent","resources":{"limits":{"cpu":"200m","memory":"200Mi"},"requests":{"cpu":"200m","memory":"200Mi"}},"volumeMounts":[{"mountPath":"/etc/cwagentconfig","name":"cwagentconfig"},{"mountPath":"/rootfs","name":"rootfs","readOnly":true},{"mountPath":"/var/run/docker.sock","name":"dockersock","readOnly":true},{"mountPath":"/var/lib/docker","name":"varlibdocker","readOnly":true},{"mountPath":"/run/containerd/containerd.sock","name":"containerdsock","readOnly":true},{"mountPath":"/sys","name":"sys","readOnly":true},{"mountPath":"/dev/disk","name":"devdisk","readOnly":true}]}],"serviceAccountName":"cloudwatch-agent","terminationGracePeriodSeconds":60,"volumes":[{"configMap":{"name":"cwagentconfig"},"name":"cwagentconfig"},{"hostPath":{"path":"/"},"name":"rootfs"},{"hostPath":{"path":"/var/run/docker.sock"},"name":"dockersock"},{"hostPath":{"path":"/var/lib/docker"},"name":"varlibdocker"},{"hostPath":{"path":"/run/containerd/containerd.sock"},"name":"containerdsock"},{"hostPath":{"path":"/sys"},"name":"sys"},{"hostPath":{"path":"/dev/disk/"},"name":"devdisk"}]}}}}
  name: cloudwatch-agent
  namespace: amazon-cloudwatch
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: cloudwatch-agent
  template:
    metadata:
      creationTimestamp: null
      labels:
        name: cloudwatch-agent
    spec:
      containers:
      - env:
        - name: HOST_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: HOST_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CI_VERSION
          value: k8s/1.3.8
        image: amazon/cloudwatch-agent:1.247348.0b251302
        imagePullPolicy: IfNotPresent
        name: cloudwatch-agent
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 200m
            memory: 200Mi
        volumeMounts:
        - mountPath: /etc/cwagentconfig
          name: cwagentconfig
        - mountPath: /rootfs
          name: rootfs
          readOnly: true
        - mountPath: /var/run/docker.sock
          name: dockersock
          readOnly: true
        - mountPath: /var/lib/docker
          name: varlibdocker
          readOnly: true
        - mountPath: /run/containerd/containerd.sock
          name: containerdsock
          readOnly: true
        - mountPath: /sys
          name: sys
          readOnly: true
        - mountPath: /dev/disk
          name: devdisk
          readOnly: true
      serviceAccount: cloudwatch-agent
      serviceAccountName: cloudwatch-agent
      volumes:
      - configMap:
          defaultMode: 420
          name: cwagentconfig
        name: cwagentconfig
      - hostPath:
          path: /
          type: ""
        name: rootfs
      - hostPath:
          path: /var/run/docker.sock
          type: ""
        name: dockersock
      - hostPath:
          path: /var/lib/docker
          type: ""
        name: varlibdocker
      - hostPath:
          path: /run/containerd/containerd.sock
          type: ""
        name: containerdsock
      - hostPath:
          path: /sys
          type: ""
        name: sys
      - hostPath:
          path: /dev/disk/
          type: ""
        name: devdisk
  updateStrategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate