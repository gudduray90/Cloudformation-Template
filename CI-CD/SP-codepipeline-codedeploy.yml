Description: Pipeline to Deploy Code from S3 to Server
AWSTemplateFormatVersion: 2010-09-09
Parameters:
  CodePipelineName:
    Description: The name of the server
    Type: String
    Default: SP-Prod-Pipeline-React
  BitbucketConnectionName:
    Type: String
    Description: "AWS codepipeline connection name"
    Default: "SalesPanda-AWS-Pipeline"
  BitBucketBranch:
    Type: String
    Default: "dev"
  BitbucketRepo:
    Type: String
    Default: "dev"
  # ServerName:
  #   Description: The name of the server
  #   Type: String
  #   Default: SALESPANDA-PREPROD-APP-SERVER-1A
  EnvironmentName:
    Description: The Current working Environment
    Type: String
  SourceBucket:
    Description: Enter the CodeCommit Repsitory Name
    Type: String
    Default: salespanda-gitlab-s3
  Artifactbucket:
    Description: The name of the artifact bucket
    Type: String
    Default: codepipeline-ap-south-1-637795064357
  ApplicationName:
    Description: Name of the application to be deployed
    Type: String
    Default: Preprod-Server-Deployment
  ComputePlatform:
    Description: The type of platform where the application is  to be deployed
    Type: String
    Default: Server
  DeploymentGroupName:
    Description: name of the deployment group to be used.
    Type: String
    Default: Preprod-Server-Deploymentgroup
  DeployConfiguration:
    Description: Select the Deployment configuration for codedeploy
    Type: String
    AllowedValues:
      - CodeDeployDefault.OneAtATime
      - CodeDeployDefault.HalfAtATime
      - CodeDeployDefault.AllAtOnce
  EC2TagKey0:
    Description: Tag key of the EC2 instance for codedeploy agent
    Type: String
    Default: 'Name'
  EC2TagValue0:
    Description: Tag value of the EC2 instance for codedeploy agent
    Type: String
    Default: DEV-SERVER
  TriggerName:
    Description: The name of the notification trigger about deployment or instance events.
    Type: String
    Default: dev-deploy-trigger
  CodePipelineSNSarn:
    Description: Enter the SNS Topic ARN to send the notifications for CICD.
    Type: String
    Default: 'arn:aws:sns:ap-south-1:013297583948:Pipeline-Notifications'
  # TagKey:
  #   Type: String
  #   Default: Name
  #   Description: >-
  #     The tag name that is associated with EC2 instances on which CodeDeploy
  #     agent is installed
  # TagValue:
  #   Type: String
  #   Description: The value associated with TagKey
  SourceOutputArtifacts:
    Type: String
    Default: devsourceartifact
    Description: >-
      Name of the Source OutputArtifacts generated by the soucre stage of
      pipeline.
Resources:
  CodeStarConnection:
    Type: 'AWS::CodeStarConnections::Connection'
    Properties:
      ConnectionName: !Ref BitbucketConnectionName
      ProviderType: Bitbucket
  CodePipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: codepipeline-service
          PolicyDocument:
            Statement:
              - Action:
                  - 'iam:PassRole'
                Resource: '*'
                Effect: Allow
                Condition:
                  StringEqualsIfExists:
                    'iam:PassedToService':
                      - cloudformation.amazonaws.com
                      - elasticbeanstalk.amazonaws.com
                      - ec2.amazonaws.com
                      - ecs-tasks.amazonaws.com
              - Action:
                  - 'codecommit:CancelUploadArchive'
                  - 'codecommit:GetBranch'
                  - 'codecommit:GetCommit'
                  - 'codecommit:GetRepository'
                  - 'codecommit:GetUploadArchiveStatus'
                  - 'codecommit:UploadArchive'              
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'codedeploy:CreateDeployment'
                  - 'codedeploy:GetApplication'
                  - 'codedeploy:GetApplicationRevision'
                  - 'codedeploy:GetDeployment'
                  - 'codedeploy:GetDeploymentConfig'
                  - 'codedeploy:RegisterApplicationRevision'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'codestar-connections:UseConnection'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'elasticbeanstalk:*'
                  - 'ec2:*'
                  - 'elasticloadbalancing:*'
                  - 'autoscaling:*'
                  - 'cloudwatch:*'
                  - 's3:*'
                  - 'sns:*'
                  - 'cloudformation:*'
                  - 'rds:*'
                  - 'sqs:*'
                  - 'ecs:*'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'lambda:InvokeFunction'
                  - 'lambda:ListFunctions'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'opsworks:CreateDeployment'
                  - 'opsworks:DescribeApps'
                  - 'opsworks:DescribeCommands'
                  - 'opsworks:DescribeDeployments'
                  - 'opsworks:DescribeInstances'
                  - 'opsworks:DescribeStacks'
                  - 'opsworks:UpdateApp'
                  - 'opsworks:UpdateStack'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:DeleteStack'
                  - 'cloudformation:DescribeStacks'
                  - 'cloudformation:UpdateStack'
                  - 'cloudformation:CreateChangeSet'
                  - 'cloudformation:DeleteChangeSet'
                  - 'cloudformation:DescribeChangeSet'
                  - 'cloudformation:ExecuteChangeSet'
                  - 'cloudformation:SetStackPolicy'
                  - 'cloudformation:ValidateTemplate'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StartBuild'
                  - 'codebuild:BatchGetBuildBatches'
                  - 'codebuild:StartBuildBatch'
                Resource: '*'
                Effect: Allow
            Version: 2012-10-17
  CodeDeployServiceIAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: CodeDeployTrustPolicy
            Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole'
  CodeDeployApplication:
    Type: 'AWS::CodeDeploy::Application'
    Properties:
      ApplicationName: !Ref ApplicationName
      ComputePlatform: !Ref ComputePlatform
      Tags:
        - Key: ApplicationName
          Value: !Ref ApplicationName
        - Key: ComputePlatform
          Value: !Ref ComputePlatform
        - Key: Project
          Value: salespanda
        - Key: createdBy
          Value: uipl
        - Key: Environment
          Value: Ref EnvironmentName
  CodeDeployDeploymentGroup:
    DependsOn:
      - CodeDeployApplication
    Type: 'AWS::CodeDeploy::DeploymentGroup'
    Properties:
      DeploymentGroupName: !Ref DeploymentGroupName
      ApplicationName: !Ref CodeDeployApplication
      DeploymentConfigName: !Ref DeployConfiguration
      Ec2TagFilters:
        - Key: !Ref EC2TagKey0
          Value: !Ref EC2TagValue0
          Type: KEY_AND_VALUE
      ServiceRoleArn: !GetAtt 
        - CodeDeployServiceIAMRole
        - Arn
      AutoRollbackConfiguration:
        Enabled: 'true'
        Events:
          - DEPLOYMENT_FAILURE
      TriggerConfigurations:
        - TriggerEvents:
            - DeploymentSuccess
            - DeploymentRollback
          TriggerName: !Ref TriggerName
          TriggerTargetArn: !Ref CodePipelineSNSarn
  CodePipelineStack:
    Type: 'AWS::CodePipeline::Pipeline'
    DependsOn: CodeDeployDeploymentGroup
    Properties:
      Name: !Ref CodePipelineName
      RoleArn: !Join 
        - ''
        - - 'arn:aws:iam::'
          - !Ref 'AWS::AccountId'
          - ':role/'
          - !Ref CodePipelineRole
      Stages:
        - Name: Source
          Actions:
            - InputArtifacts: []
              Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: '1'
                Provider: CodeStarSourceConnection
              OutputArtifacts:
                - Name: !Ref SourceOutputArtifacts
              Configuration:
                ConnectionArn: !Ref CodeStarConnection
                BranchName: !Ref BitBucketBranch
                FullRepositoryId: !Ref BitbucketRepo
              RunOrder: 1
        - Name: Deploy
          Actions:
            - InputArtifacts:
                - Name: !Ref SourceOutputArtifacts
              Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CodeDeploy
              OutputArtifacts: []
              Configuration:
                ApplicationName: !Ref CodeDeployApplication
                DeploymentGroupName: !Ref CodeDeployDeploymentGroup
              RunOrder: 1
      ArtifactStore:
        Type: S3
        Location: !Ref Artifactbucket
Outputs:
  CodeDeployURL:
    Value: !Join 
      - ''
      - - 'https://console.aws.amazon.com/codedeploy/home?region='
        - !Ref 'AWS::Region'
        - '#/deployments/'
    Description: CodeDeploy URL
  CodePipelineURL:
    Value: !Join 
      - ''
      - - 'https://console.aws.amazon.com/codepipeline/home?region='
        - !Ref 'AWS::Region'
        - '#/view/'
        - !Ref CodePipelineStack
    Description: CodePipeline URL
